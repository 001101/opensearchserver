<?xml version="1.0" encoding="UTF-8"?>
<!--   
	License Agreement for Jaeksoft Open Search Server
	
	Copyright (C) 2008-2009 Emmanuel Keller / Jaeksoft
	
	http://www.open-search-server.com
	
	This file is part of Jaeksoft Open Search Server.
	
	Jaeksoft Open Search Server is free software: you can redistribute it and/or
	modify it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	Jaeksoft Open Search Server is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with Jaeksoft OpenSearchServer. 
	If not, see <http://www.gnu.org/licenses/>.
-->
<project name="OpenSearchServer" default="dist" basedir=".">

	<property name="src" location="src/java" />
	<property name="resources" location="src/resources" />
	<property name="web" location="WebContent" />
	<property name="lib" location="lib" />
	<property name="wlib" location="${web}/WEB-INF/lib" />
	<property name="build" location="ant-build" />
	<property name="build-release" location="${build}/release" />
	<property name="build-debug" location="${build}/debug" />
	<property name="build-doc" location="${build}/doc" />
	<property name="doc" location="doc" />
	<property name="dist" location="dist" />
	<property name="temp" location="temp" />
	<property name="licenses" location="licenses" />
	<property name="product" value="open-search-server" />
	<property name="name-release" value="${product}" />
	<property name="name-debug" value="${product}-debug" />
	<property name="tomcat-name" value="apache-tomcat-6.0.20" />
	<property name="tomcat-zip" location="pkg/${tomcat-name}.zip" />
	<property name="shell-dir" location="pkg/shell" />
	<property name="examples" location="examples" />

	<path id="project.class.path">
		<fileset dir="${lib}">
			<include name="**.jar" />
		</fileset>
		<fileset dir="${wlib}">
			<include name="**.jar" />
		</fileset>
	</path>

	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${build-release}" />
		<mkdir dir="${build-debug}" />
		<mkdir dir="${build-doc}" />
	</target>

	<target name="compile-release" depends="init" description="compile the source ">
		<javac debug="false" compiler="modern" optimize="true" target="1.5" srcdir="${src}" destdir="${build-release}" classpathref="project.class.path" />
	</target>

	<target name="compile-debug" depends="init" description="compile the source ">
		<javac debug="true" compiler="modern" optimize="false" target="1.5" srcdir="${src}" destdir="${build-debug}" classpathref="project.class.path" />
	</target>

	<target name="dist-jar-release" depends="compile-release">
		<mkdir dir="${dist}" />
		<jar jarfile="${dist}/${name-release}.jar">
			<fileset dir="${build-release}" />
			<fileset dir="${resources}" />
		</jar>
	</target>

	<target name="dist-war-release" depends="dist-jar-release">
		<mkdir dir="${dist}" />
		<war destfile="${dist}/${name-release}.war" basedir="${web}" keepcompression="true" webxml="${web}/WEB-INF/web.xml">
			<lib file="${dist}/${name-release}.jar" />
		</war>
	</target>

	<target name="dist-jar-debug" depends="compile-debug">
		<mkdir dir="${dist}" />
		<jar jarfile="${dist}/${name-debug}.jar">
			<fileset dir="${build-debug}" />
			<fileset dir="${resources}" />
		</jar>
	</target>

	<target name="dist-war-debug" depends="dist-jar-debug">
		<mkdir dir="${dist}" />
		<war destfile="${dist}/${name-debug}.war" basedir="${web}" keepcompression="true" webxml="${web}/WEB-INF/web.xml">
			<lib file="${dist}/${name-debug}.jar" />
		</war>
	</target>

	<target name="dist" depends="dist-war-release,dist-war-debug,doc">
		<mkdir dir="${dist}/${product}" />
		<unzip src="${tomcat-zip}" dest="${dist}/${product}" />
		<delete dir="${dist}/${product}/${tomcat-name}/webapps/ROOT" />
		<delete dir="${dist}/${product}/${tomcat-name}/webapps/examples" />
		<delete dir="${dist}/${product}/${tomcat-name}/webapps/docs" />
		<copy file="${dist}/${product}.war" tofile="${dist}/${product}/${tomcat-name}/webapps/ROOT.war" />
		<copy todir="${dist}/${product}/LICENSES">
			<fileset dir="${licenses}" />
		</copy>

		<copy todir="${dist}/${product}">
			<fileset file="NOTICE.txt" />
			<fileset file="README.txt" />
			<fileset file="CHANGELOG.txt" />
			<fileset dir="${shell-dir}" />
		</copy>

		<!-- Copy examples -->
		<copy todir="${dist}/${product}/examples">
			<fileset dir="${examples}" />
		</copy>

		<!-- Copy PDF and HTML documentation -->
		<copy file="${build-doc}/en/documentation.pdf" todir="${dist}/${product}/doc" />
		<copy file="${build-doc}/en/documentation.pdf" todir="${dist}" />
		<copy todir="${dist}/${product}/doc/html">
			<fileset dir="${build-doc}/en/html" />
		</copy>

		<!-- Check executable file flag for batches -->
		<chmod perm="ugo+x" type="file">
			<fileset dir="${dist}/${product}">
				<include name="**/*.sh" />
				<include name="**/*.bat" />
			</fileset>
		</chmod>

		<tar longfile="gnu" compression="gzip" destfile="${dist}/${product}.tar.gz">
			<tarfileset dir="${dist}/${product}" mode="755" prefix="${product}">
				<include name="**/*.sh" />
				<include name="**/*.bat" />
			</tarfileset>
			<tarfileset dir="${dist}/${product}" prefix="${product}">
				<include name="**" />
				<exclude name="**/*.sh" />
				<exclude name="**/*.bat" />
			</tarfileset>
		</tar>
		<zip encoding="windows-1250" destfile="${dist}/${product}.zip">
			<zipfileset dir="${dist}/${product}" filemode="755" prefix="${product}">
				<include name="**/*.sh" />
				<include name="**/*.bat" />
			</zipfileset>
			<zipfileset dir="${dist}/${product}" prefix="${product}">
				<include name="**" />
				<exclude name="**/*.sh" />
				<exclude name="**/*.bat" />
			</zipfileset>
		</zip>
		<delete dir="${dist}/${product}" />
	</target>

	<import file="${dita.dir}/conductor.xml" />

	<target name="doc-en" depends="use-init">
		<antcall target="dita2xhtml">
			<param name="args.input" value="doc/en/dita/documentation.ditamap" />
			<param name="output.dir" value="${build-doc}/en/html" />
			<param name="clean.temp" value="yes" />
		</antcall>
		<antcall target="dita2pdf2">
			<param name="args.input" value="doc/en/dita/documentation.ditamap" />
			<param name="output.dir" value="${build-doc}/en" />
			<param name="clean.temp" value="yes" />
		</antcall>
	</target>

	<target name="doc-fr" depends="use-init">
		<antcall target="dita2xhtml">
			<param name="args.input" value="doc/fr/dita/documentation.ditamap" />
			<param name="output.dir" value="${build-doc}/fr/html" />
			<param name="clean.temp" value="yes" />
		</antcall>
		<antcall target="dita2pdf2">
			<param name="args.input" value="doc/fr/dita/documentation.ditamap" />
			<param name="output.dir" value="${build-doc}/fr" />
			<param name="clean.temp" value="yes" />
		</antcall>
	</target>

	<target name="javadoc">
		<javadoc sourcepath="${src}" destdir="${build-doc}/javadoc" />
	</target>

	<target name="doc" depends="doc-en" />

	<target name="clean" description="clean up">
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete dir="${temp}" />
	</target>

</project>