<?xml version="1.0" encoding="UTF-8"?>
<!--   
	License Agreement for OpenSearchServer
	
	Copyright (C) 2008-2013 Emmanuel Keller / Jaeksoft
	
	http://www.open-search-server.com
	
	This file is part of OpenSearchServer.
	
	OpenSearchServer is free software: you can redistribute it and/or
	modify it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	OpenSearchServer is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with OpenSearchServer. 
	If not, see <http://www.gnu.org/licenses/>.
-->
<project name="OpenSearchServer" default="dist" basedir=".">

	<property environment="env" />
	<property name="lib" location="lib" />
	<property name="build" location="ant-build" />
	<property name="build-doc" location="${build}/doc" />
	<property name="dist" location="dist" />
	<property name="temp" location="temp" />
	<property name="temp-version" location="${temp}/version" />
	<property name="licenses" location="licenses" />
	<property name="product" value="open-search-server" />
	<property name="name" value="${product}" />
	<property name="tomcat-name" value="apache-tomcat-7.0.42" />
	<property name="tomcat-zip" location="pkg/${tomcat-name}.zip" />
	<property name="tomcat-config" location="pkg/tomcat_config" />
	<property name="tomcat-bin" location="pkg/tomcat_bin" />
	<property name="tomcat-lib" location="pkg/tomcat_lib" />
	<property name="shell-dir" location="pkg/shell" />
	<property name="examples" location="examples" />
	<property name="war" location="target/opensearchserver-2.0-SNAPSHOT.war" />
	<property name="tomcat-context-path" value="/jenkins-oss-2.0-testing" />
	<property name="tomcat-test-url" value="http://localhost:8080/manager/text" />
	<property name="tomcat-username" value="testing" />
	<loadproperties srcfile="version" />

	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${temp}" />
		<echo file="${temp-version}" append="false" message="VERSION = ${VERSION}${line.separator}" />
		<echo file="${temp-version}" append="true" message="STAGE = ${STAGE}${line.separator}" />
		<echo file="${temp-version}" append="true" message="REVISION = ${env.GIT_COMMIT}${line.separator}" />
		<echo file="${temp-version}" append="true" message="BUILD = ${env.BUILD_NUMBER}${line.separator}" />
	</target>

	<target name="dist" depends="init">
		<mkdir dir="${dist}/${product}" />
		<mkdir dir="${dist}/${product}/data" />
		<unzip src="${tomcat-zip}" dest="${dist}/${product}" />
		<copy todir="${dist}/${product}/${tomcat-name}/conf">
			<fileset dir="${tomcat-config}" />
		</copy>
		<delete dir="${dist}/${product}/${tomcat-name}/webapps/ROOT" />
		<delete dir="${dist}/${product}/${tomcat-name}/webapps/examples" />
		<delete dir="${dist}/${product}/${tomcat-name}/webapps/docs" />

		<!-- Put version file to WAR -->
		<zip destfile="${war}" update="true">
			<zipfileset file="${temp-version}" prefix="/" />
		</zip>

		<copy file="${war}" tofile="${dist}/${product}/${tomcat-name}/webapps/ROOT.war" />
		<copy file="${war}" tofile="${dist}/${product}.war" />
		<copy todir="${dist}/${product}/LICENSES">
			<fileset dir="${licenses}" />
		</copy>

		<copy todir="${dist}/${product}">
			<fileset file="NOTICE.txt" />
			<fileset file="README.txt" />
			<fileset file="CHANGELOG.txt" />
			<fileset dir="${shell-dir}" />
		</copy>

		<!-- Copy examples -->
		<copy todir="${dist}/${product}/examples">
			<fileset dir="${examples}" />
		</copy>

		<!-- Copy bin -->
		<copy todir="${dist}/${product}/${tomcat-name}/bin">
			<fileset dir="${tomcat-bin}" />
		</copy>

		<!-- Copy lib -->
		<copy todir="${dist}/${product}/${tomcat-name}/lib">
			<fileset dir="${tomcat-lib}" />
		</copy>

		<!-- Check executable file flag for batches -->
		<chmod perm="ugo+x" type="file">
			<fileset dir="${dist}/${product}">
				<include name="**/*.sh" />
				<include name="**/*.bat" />
			</fileset>
		</chmod>

		<!-- Create the tar.gz archive -->
		<tar longfile="gnu" compression="gzip" destfile="${dist}/${product}.tar.gz">
			<tarfileset dir="${dist}/${product}" mode="755" prefix="${product}">
				<include name="**/*.sh" />
				<include name="**/*.bat" />
			</tarfileset>
			<tarfileset dir="${dist}/${product}" prefix="${product}">
				<include name="**" />
				<exclude name="**/*.sh" />
				<exclude name="**/*.bat" />
			</tarfileset>
		</tar>

		<!-- Create the zip archive -->
		<zip encoding="windows-1250" destfile="${dist}/${product}.zip">
			<zipfileset dir="${dist}/${product}" filemode="755" prefix="${product}">
				<include name="**/*.sh" />
				<include name="**/*.bat" />
			</zipfileset>
			<zipfileset dir="${dist}/${product}" prefix="${product}">
				<include name="**" />
				<exclude name="**/*.sh" />
				<exclude name="**/*.bat" />
			</zipfileset>
		</zip>

		<!-- Copy Txt Files -->
		<copy todir="${dist}">
			<fileset file="NOTICE.txt" />
			<fileset file="README.txt" />
			<fileset file="CHANGELOG.txt" />
		</copy>

		<!-- Clean the temporary product directory -->
		<delete dir="${dist}/${product}" />

	</target>

	<!-- The tarball -->
	<target name="dist-src">
		<mkdir dir="${dist}" />
		<tar compression="gzip" destfile="${dist}/${product}.src.tar.gz" longfile="gnu" basedir="." excludes="temp/**, dist/**, ant-build/**, build/**, target/**, .git/**" />
	</target>

	<target name="clean" description="clean up">
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete dir="${temp}" />
	</target>

</project>